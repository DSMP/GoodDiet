#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DobraDietaApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GoodDietDb")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertMeal_type(Meal_type instance);
    partial void UpdateMeal_type(Meal_type instance);
    partial void DeleteMeal_type(Meal_type instance);
    partial void InsertMeal(Meal instance);
    partial void UpdateMeal(Meal instance);
    partial void DeleteMeal(Meal instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::DobraDietaApp.Properties.Settings.Default.GoodDietDbConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Employee_Role> Employee_Roles
		{
			get
			{
				return this.GetTable<Employee_Role>();
			}
		}
		
		public System.Data.Linq.Table<Meal_type> Meal_types
		{
			get
			{
				return this.GetTable<Meal_type>();
			}
		}
		
		public System.Data.Linq.Table<Meal> Meals
		{
			get
			{
				return this.GetTable<Meal>();
			}
		}
		
		public System.Data.Linq.Table<Meal_product> Meal_products
		{
			get
			{
				return this.GetTable<Meal_product>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_customer;
		
		private string _name;
		
		private string _surname;
		
		private System.Nullable<int> _age;
		
		private System.Nullable<double> _weight;
		
		private System.Nullable<double> _height;
		
		private EntitySet<Meal> _Meals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_customerChanging(int value);
    partial void Onid_customerChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void OnweightChanging(System.Nullable<double> value);
    partial void OnweightChanged();
    partial void OnheightChanging(System.Nullable<double> value);
    partial void OnheightChanged();
    #endregion
		
		public Customer()
		{
			this._Meals = new EntitySet<Meal>(new Action<Meal>(this.attach_Meals), new Action<Meal>(this.detach_Meals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_customer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_customer
		{
			get
			{
				return this._id_customer;
			}
			set
			{
				if ((this._id_customer != value))
				{
					this.Onid_customerChanging(value);
					this.SendPropertyChanging();
					this._id_customer = value;
					this.SendPropertyChanged("id_customer");
					this.Onid_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="VarChar(50)")]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int")]
		public System.Nullable<int> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Float")]
		public System.Nullable<double> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="Float")]
		public System.Nullable<double> height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Meal", Storage="_Meals", ThisKey="id_customer", OtherKey="id_customer")]
		public EntitySet<Meal> Meals
		{
			get
			{
				return this._Meals;
			}
			set
			{
				this._Meals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_role;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_roleChanging(int value);
    partial void Onid_roleChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_role", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_role
		{
			get
			{
				return this._id_role;
			}
			set
			{
				if ((this._id_role != value))
				{
					this.Onid_roleChanging(value);
					this.SendPropertyChanging();
					this._id_role = value;
					this.SendPropertyChanged("id_role");
					this.Onid_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_employee;
		
		private string _login;
		
		private string _name;
		
		private string _surname;
		
		private string _password;
		
		private System.Data.Linq.Binary _photo;
		
		private EntitySet<Meal> _Meals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_employeeChanging(int value);
    partial void Onid_employeeChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnphotoChanging(System.Data.Linq.Binary value);
    partial void OnphotoChanged();
    #endregion
		
		public Employee()
		{
			this._Meals = new EntitySet<Meal>(new Action<Meal>(this.attach_Meals), new Action<Meal>(this.detach_Meals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employee", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_employee
		{
			get
			{
				return this._id_employee;
			}
			set
			{
				if ((this._id_employee != value))
				{
					this.Onid_employeeChanging(value);
					this.SendPropertyChanging();
					this._id_employee = value;
					this.SendPropertyChanged("id_employee");
					this.Onid_employeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(50)")]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="VarChar(50)")]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(64)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="Binary(1)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Meal", Storage="_Meals", ThisKey="id_employee", OtherKey="id_employee")]
		public EntitySet<Meal> Meals
		{
			get
			{
				return this._Meals;
			}
			set
			{
				this._Meals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees_Roles")]
	public partial class Employee_Role
	{
		
		private int _id_employee;
		
		private int _id_role;
		
		public Employee_Role()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employee", DbType="Int NOT NULL")]
		public int id_employee
		{
			get
			{
				return this._id_employee;
			}
			set
			{
				if ((this._id_employee != value))
				{
					this._id_employee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_role", DbType="Int NOT NULL")]
		public int id_role
		{
			get
			{
				return this._id_role;
			}
			set
			{
				if ((this._id_role != value))
				{
					this._id_role = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meal_type")]
	public partial class Meal_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_meal_type;
		
		private string _name;
		
		private EntitySet<Meal> _Meals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_meal_typeChanging(int value);
    partial void Onid_meal_typeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Meal_type()
		{
			this._Meals = new EntitySet<Meal>(new Action<Meal>(this.attach_Meals), new Action<Meal>(this.detach_Meals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_meal_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_meal_type
		{
			get
			{
				return this._id_meal_type;
			}
			set
			{
				if ((this._id_meal_type != value))
				{
					this.Onid_meal_typeChanging(value);
					this.SendPropertyChanging();
					this._id_meal_type = value;
					this.SendPropertyChanged("id_meal_type");
					this.Onid_meal_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meal_type_Meal", Storage="_Meals", ThisKey="id_meal_type", OtherKey="id_meal_type")]
		public EntitySet<Meal> Meals
		{
			get
			{
				return this._Meals;
			}
			set
			{
				this._Meals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.Meal_type = this;
		}
		
		private void detach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.Meal_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meals")]
	public partial class Meal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_meal;
		
		private int _id_customer;
		
		private int _id_meal_type;
		
		private System.Nullable<System.DateTime> _meal_date;
		
		private int _id_employee;
		
		private System.Nullable<System.DateTime> _date_inserted;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Meal_type> _Meal_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_mealChanging(int value);
    partial void Onid_mealChanged();
    partial void Onid_customerChanging(int value);
    partial void Onid_customerChanged();
    partial void Onid_meal_typeChanging(int value);
    partial void Onid_meal_typeChanged();
    partial void Onmeal_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmeal_dateChanged();
    partial void Onid_employeeChanging(int value);
    partial void Onid_employeeChanged();
    partial void Ondate_insertedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_insertedChanged();
    #endregion
		
		public Meal()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Employee = default(EntityRef<Employee>);
			this._Meal_type = default(EntityRef<Meal_type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_meal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_meal
		{
			get
			{
				return this._id_meal;
			}
			set
			{
				if ((this._id_meal != value))
				{
					this.Onid_mealChanging(value);
					this.SendPropertyChanging();
					this._id_meal = value;
					this.SendPropertyChanged("id_meal");
					this.Onid_mealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_customer", DbType="Int NOT NULL")]
		public int id_customer
		{
			get
			{
				return this._id_customer;
			}
			set
			{
				if ((this._id_customer != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_customerChanging(value);
					this.SendPropertyChanging();
					this._id_customer = value;
					this.SendPropertyChanged("id_customer");
					this.Onid_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_meal_type", DbType="Int NOT NULL")]
		public int id_meal_type
		{
			get
			{
				return this._id_meal_type;
			}
			set
			{
				if ((this._id_meal_type != value))
				{
					if (this._Meal_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_meal_typeChanging(value);
					this.SendPropertyChanging();
					this._id_meal_type = value;
					this.SendPropertyChanged("id_meal_type");
					this.Onid_meal_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meal_date", DbType="Date")]
		public System.Nullable<System.DateTime> meal_date
		{
			get
			{
				return this._meal_date;
			}
			set
			{
				if ((this._meal_date != value))
				{
					this.Onmeal_dateChanging(value);
					this.SendPropertyChanging();
					this._meal_date = value;
					this.SendPropertyChanged("meal_date");
					this.Onmeal_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employee", DbType="Int NOT NULL")]
		public int id_employee
		{
			get
			{
				return this._id_employee;
			}
			set
			{
				if ((this._id_employee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_employeeChanging(value);
					this.SendPropertyChanging();
					this._id_employee = value;
					this.SendPropertyChanged("id_employee");
					this.Onid_employeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_inserted", DbType="Date")]
		public System.Nullable<System.DateTime> date_inserted
		{
			get
			{
				return this._date_inserted;
			}
			set
			{
				if ((this._date_inserted != value))
				{
					this.Ondate_insertedChanging(value);
					this.SendPropertyChanging();
					this._date_inserted = value;
					this.SendPropertyChanged("date_inserted");
					this.Ondate_insertedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Meal", Storage="_Customer", ThisKey="id_customer", OtherKey="id_customer", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Meals.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Meals.Add(this);
						this._id_customer = value.id_customer;
					}
					else
					{
						this._id_customer = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Meal", Storage="_Employee", ThisKey="id_employee", OtherKey="id_employee", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Meals.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Meals.Add(this);
						this._id_employee = value.id_employee;
					}
					else
					{
						this._id_employee = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meal_type_Meal", Storage="_Meal_type", ThisKey="id_meal_type", OtherKey="id_meal_type", IsForeignKey=true)]
		public Meal_type Meal_type
		{
			get
			{
				return this._Meal_type.Entity;
			}
			set
			{
				Meal_type previousValue = this._Meal_type.Entity;
				if (((previousValue != value) 
							|| (this._Meal_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meal_type.Entity = null;
						previousValue.Meals.Remove(this);
					}
					this._Meal_type.Entity = value;
					if ((value != null))
					{
						value.Meals.Add(this);
						this._id_meal_type = value.id_meal_type;
					}
					else
					{
						this._id_meal_type = default(int);
					}
					this.SendPropertyChanged("Meal_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meals_products")]
	public partial class Meal_product
	{
		
		private int _id_meal;
		
		private int _id_product;
		
		public Meal_product()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_meal", DbType="Int NOT NULL")]
		public int id_meal
		{
			get
			{
				return this._id_meal;
			}
			set
			{
				if ((this._id_meal != value))
				{
					this._id_meal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", DbType="Int NOT NULL")]
		public int id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					this._id_product = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_product;
		
		private string _name;
		
		private System.Nullable<double> _weight;
		
		private string _home_measure;
		
		private System.Nullable<double> _cal;
		
		private System.Nullable<double> _protein;
		
		private System.Nullable<double> _fats;
		
		private System.Nullable<double> _carbo_hydrates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_productChanging(int value);
    partial void Onid_productChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnweightChanging(System.Nullable<double> value);
    partial void OnweightChanged();
    partial void Onhome_measureChanging(string value);
    partial void Onhome_measureChanged();
    partial void OncalChanging(System.Nullable<double> value);
    partial void OncalChanged();
    partial void OnproteinChanging(System.Nullable<double> value);
    partial void OnproteinChanged();
    partial void OnfatsChanging(System.Nullable<double> value);
    partial void OnfatsChanged();
    partial void Oncarbo_hydratesChanging(System.Nullable<double> value);
    partial void Oncarbo_hydratesChanged();
    #endregion
		
		public Product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Float")]
		public System.Nullable<double> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_home_measure", DbType="VarChar(50)")]
		public string home_measure
		{
			get
			{
				return this._home_measure;
			}
			set
			{
				if ((this._home_measure != value))
				{
					this.Onhome_measureChanging(value);
					this.SendPropertyChanging();
					this._home_measure = value;
					this.SendPropertyChanged("home_measure");
					this.Onhome_measureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cal", DbType="Float")]
		public System.Nullable<double> cal
		{
			get
			{
				return this._cal;
			}
			set
			{
				if ((this._cal != value))
				{
					this.OncalChanging(value);
					this.SendPropertyChanging();
					this._cal = value;
					this.SendPropertyChanged("cal");
					this.OncalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_protein", DbType="Float")]
		public System.Nullable<double> protein
		{
			get
			{
				return this._protein;
			}
			set
			{
				if ((this._protein != value))
				{
					this.OnproteinChanging(value);
					this.SendPropertyChanging();
					this._protein = value;
					this.SendPropertyChanged("protein");
					this.OnproteinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fats", DbType="Float")]
		public System.Nullable<double> fats
		{
			get
			{
				return this._fats;
			}
			set
			{
				if ((this._fats != value))
				{
					this.OnfatsChanging(value);
					this.SendPropertyChanging();
					this._fats = value;
					this.SendPropertyChanged("fats");
					this.OnfatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carbo_hydrates", DbType="Float")]
		public System.Nullable<double> carbo_hydrates
		{
			get
			{
				return this._carbo_hydrates;
			}
			set
			{
				if ((this._carbo_hydrates != value))
				{
					this.Oncarbo_hydratesChanging(value);
					this.SendPropertyChanging();
					this._carbo_hydrates = value;
					this.SendPropertyChanged("carbo_hydrates");
					this.Oncarbo_hydratesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
